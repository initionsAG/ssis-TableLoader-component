<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAICAQAAEABADoAgAARgAAABAQEAABAAQAKAEAAC4DAAAgIAAAAQAIAKgIAABWBAAAEBAAAAEA
        CABoBQAA/gwAACgAAAAgAAAAQAAAAAEABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGRkAJSUlADc3
        NwBHR0cAV1dXAG9vbwAXc/wAiYmJAJaWlgClpaUAubm5AMnJyQDZ2dkA5+fnAP7+/gAAAAAAZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm7u7u7u7u7u7u7u7u7u5mZu7u7u7u7u7u7u7u7u7uZmbu
        7u7su87uze7u7u7u7mZm7u7ukhIo7hnu7u7u7u5mZu7u7hKrQs4Z7u7u7u7uZmbu7u4I7rGuGe7u7u7u
        7mZm7u7u7u0xvhjd7u7u7u5mZu7u7u2TCO4SNIzu7u7uZmbu7u7lBJ7uFHUk3u7u7mZm7u7ucF3u7hnu
        ka7u7u5mZu7u7lPO184Z7tCu7u7uZmbu7u6Bq0G+F8xRvu7u7mZm7u7u0yIH7hEiF+7u7u5mZu7u7u2q
        re6qqr3u7u7uZmbu7u7u7u3t7u7u7u7u7mZm7u7u7u5URK3u7u7u7u5mZu7u7u7uE3QH7u7u7u7uZmbu
        7u7u7hntUt7u7u7u7mZm7u7u7u4Z7qGu7u7u7u5mZu7u7u7uGe7Rru7u7u7uZmbu7u7u7hnu0a7u7u7u
        7mZm7u7u7u4Z7tGu7u7u7u5mZu7u7u7uGe6hru7u7u7uZmbu7u7u7hnucb7u7u7u7mZm7u7u7u4UiCfu
        7u7u7u5mZu7u7u7uQ0Ne7u7u7u7uZmbu7u7u7t3d3u7u7u7u7mZm7u7u7u7u7u7u7u7u7u5mZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAQAAAAIAAAAAEABAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABHR0cAWFhYAGVlZQB3d3cAF3P8AIWFhQCXl5cApKSkAKqqqgC1tbUAwsLCANzc
        3ADm5uYA8vLyAP7+/gAAAAAARERERERERERO7u7u7u7u5E7uk45+7u7kTu4LHC7u7uRO7tkNB77u5E7u
        U84ZHO7kTu4bPCwr7uRO7qNuI27u5E7u7ojO7u7kTu7uCQ7u7uRO7u4uO+7u5E7u7i5b7u7kTu7uLivu
        7uRO7u4DXu7u5E7u7t3u7u7kREREREREREQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAACAAAABAAAAAAQAIAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABEREQAZGRkAHh4eACEhIQAmJiYAKSkpAC0tLQAxMTEANTU1ADk5OQA9PT0AQEBAAEtL
        SwBMTEwAUFBQAFVVVQBZWVkAXl5eAGBgYABlZWUAcHBwAHR0dAB5eXkAf39/ABdz/ACGhoYAioqKAIyM
        jACRkZEAlJSUAJiYmACfn58AoaGhAKWlpQCtra0AtLS0ALq6ugC9vb0AxcXFAMnJyQDMzMwA1dXVANra
        2gDd3d0A4eHhAOXl5QDq6uoA7e3tAPHx8QD19fUA+vr6AP7+/gAAkGMAALB5AADPjwAA8KYAEf+0ADH/
        vgBR/8gAcf/TAJH/3ACx/+UA0f/wAP///wAAAAAAAC8OAABQGAAAcCIAAJAsAACwNgAAz0AAAPBKABH/
        WwAx/3EAUf+HAHH/nQCR/7IAsf/JANH/3wD///8AAAAAAAIvAAAEUAAABnAAAAiQAAAKsAAAC88AAA7w
        AAAg/xIAPf8xAFv/UQB5/3EAmP+RALX/sQDU/9EA////AAAAAAAULwAAIlAAADBwAAA9kAAATLAAAFnP
        AABn8AAAeP8RAIr/MQCc/1EArv9xAMD/kQDS/7EA5P/RAP///wAAAAAAJi8AAEBQAABacAAAdJAAAI6w
        AACpzwAAwvAAANH/EQDY/zEA3v9RAOP/cQDp/5EA7/+xAPb/0QD///8AAAAAAC8mAABQQQAAcFsAAJB0
        AACwjgAAz6kAAPDDAAD/0hEA/9gxAP/dUQD/5HEA/+qRAP/wsQD/9tEA////AAAAAAAvFAAAUCIAAHAw
        AACQPgAAsE0AAM9bAADwaQAA/3kRAP+KMQD/nVEA/69xAP/BkQD/0rEA/+XRAP///wAAAAAALwMAAFAE
        AABwBgAAkAkAALAKAADPDAAA8A4AAP8gEgD/PjEA/1xRAP96cQD/l5EA/7axAP/U0QD///8AAAAAAC8A
        DgBQABcAcAAhAJAAKwCwADYAzwBAAPAASQD/EVoA/zFwAP9RhgD/cZwA/5GyAP+xyAD/0d8A////AAAA
        AAAvACAAUAA2AHAATACQAGIAsAB4AM8AjgDwAKQA/xGzAP8xvgD/UccA/3HRAP+R3AD/seUA/9HwAP//
        /wAAAAAALAAvAEsAUABpAHAAhwCQAKUAsADEAM8A4QDwAPAR/wDyMf8A9FH/APZx/wD3kf8A+bH/APvR
        /wD///8AAAAAABsALwAtAFAAPwBwAFIAkABjALAAdgDPAIgA8ACZEf8ApjH/ALRR/wDCcf8Az5H/ANyx
        /wDr0f8A////AAAAAAAIAC8ADgBQABUAcAAbAJAAIQCwACYAzwAsAPAAPhH/AFgx/wBxUf8AjHH/AKaR
        /wC/sf8A2tH/AP///wAYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgY
        GBgYGBgYGBgYGBgYGBgYGBgYGBg/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/GBgYGD8/Pz8/Pz8/
        Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8YGBgYPz8zMzM/MisoKCsxMzMpLz8/PzM/MzM/Pz8/PxgYGBg/PzMz
        MzMhCgQHBx8zMwQgPzMzPz8zMz8/Pz8/GBgYGD8/MzMzMwIKJScNCCo/BCA/Pz8zPzMzPz8/Pz8YGBgY
        Pz8zMzMzAR4zMycFJT8FID8zMz8/MzM/Pz8/PxgYGBg/PzMzMzMyMjItCwYnPwQdLy4yMz8zMz8/Pz8/
        GBgYGD8/MzMzMzMwIAsCGzMzAwcODh4rPzMzPz8/Pz8YGBgYPz8zMzM/LxYBDSIzMzMDEBoVBhEuMzM/
        Pz8/PxgYGBg/PzMzMzMbARYsMzMzMwQgPzEhAyU/Mz8/Pz8/GBgYGD8/MzMzPxQLKz8sGiszBSA/My0C
        IzMzPz8/Pz8YGBgYPz8zMzMzHAYiKQ8GJzMEGSkpEwQoMzM/Pz8/PxgYGBg/PzMzPz8tDAcKABowMwME
        CgoEGT8zMz8/Pz8/GBgYGD8/MzMzMzIsJSMkMD8/JSMjIyYwPzMzPz8/Pz8YGBgYPz8/Pz8/Pz8/PzAw
        MDAzMz8zMzM/MzM/Pz8/PxgYGBg/PzMzMzMzMzMzExEQESIwPzMzMz8zMz8/Pz8/GBgYGD8/MzMzMzMz
        PzMCDhYTABs/MzMzPzMzPz8/Pz8YGBgYPz8zMzMzMzMzMwMhPzASCS0/MzM/MzM/Pz8/PxgYGBg/PzMz
        MzMzMz8/AyE/MyMEJTMzMz8zMz8/Pz8/GBgYGD8/MzMzMzMzMzMDIT8zLwMkPzMzPzMzPz8/Pz8YGBgY
        Pz8/Pz8/Pz8/PwMhPz8vAyQzMzM/MzM/Pz8/PxgYGBg/PzMzMzMzMzMzAyE/Py8DJD8zMz8zMz8/Pz8/
        GBgYGD8/MzMzMzMzPzMEIT8/JQMkMzMzPzMzPz8/Pz8YGBgYPz8/Pz8/Pz8/PwMhPz8WBSczMzM/MzM/
        Pz8/PxgYGBg/Pz8/Pz8/Pz8/AhIdHQgXPzMzMz8zMz8/Pz8/GBgYGD8/Pz8/Pz8/PzMQDQ0NFi8/MzMz
        PzMzPz8/Pz8YGBgYPz8/Pz8/Pz8/Py4tLS0wMz8zMzM/MzM/Pz8/PxgYGBg/Pz8/Pz8/Pz8/Pz8/Pz8/
        Pz8/Pz8/Pz8/Pz8/GBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgY
        GBgYGBgYGBgYGBgYGBgYGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAEAAAACAAAAABAAgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAQ0NDAEVFRQBISEgATU1NAFBQUABUVFQAW1tbAFxcXABiYmIAZGRkAG5ubgBwcHAAd3d3AHp6
        egAXc/wAgoKCAIaGhgCRkZEAmJiYAJ2dnQCioqIApqamAKioqACurq4AsbGxALy8vADCwsIA19fXANvb
        2wDd3d0A4ODgAOXl5QDo6OgA8vLyAPn5+QD+/v4AAIaQAAClsAAAw88AAOHwABHv/wAx8f8AUfP/AHH1
        /wCR9/8Asfn/ANH7/wD///8AAAAAAAAvIQAAUDcAAHBMAACQYwAAsHkAAM+PAADwpgAR/7QAMf++AFH/
        yABx/9MAkf/cALH/5QDR//AA////AAAAAAAALw4AAFAYAABwIgAAkCwAALA2AADPQAAA8EoAEf9bADH/
        cQBR/4cAcf+dAJH/sgCx/8kA0f/fAP///wAAAAAAAi8AAARQAAAGcAAACJAAAAqwAAALzwAADvAAACD/
        EgA9/zEAW/9RAHn/cQCY/5EAtf+xANT/0QD///8AAAAAABQvAAAiUAAAMHAAAD2QAABMsAAAWc8AAGfw
        AAB4/xEAiv8xAJz/UQCu/3EAwP+RANL/sQDk/9EA////AAAAAAAmLwAAQFAAAFpwAAB0kAAAjrAAAKnP
        AADC8AAA0f8RANj/MQDe/1EA4/9xAOn/kQDv/7EA9v/RAP///wAAAAAALyYAAFBBAABwWwAAkHQAALCO
        AADPqQAA8MMAAP/SEQD/2DEA/91RAP/kcQD/6pEA//CxAP/20QD///8AAAAAAC8UAABQIgAAcDAAAJA+
        AACwTQAAz1sAAPBpAAD/eREA/4oxAP+dUQD/r3EA/8GRAP/SsQD/5dEA////AAAAAAAvAwAAUAQAAHAG
        AACQCQAAsAoAAM8MAADwDgAA/yASAP8+MQD/XFEA/3pxAP+XkQD/trEA/9TRAP///wAAAAAALwAOAFAA
        FwBwACEAkAArALAANgDPAEAA8ABJAP8RWgD/MXAA/1GGAP9xnAD/kbIA/7HIAP/R3wD///8AAAAAAC8A
        IABQADYAcABMAJAAYgCwAHgAzwCOAPAApAD/EbMA/zG+AP9RxwD/cdEA/5HcAP+x5QD/0fAA////AAAA
        AAAsAC8ASwBQAGkAcACHAJAApQCwAMQAzwDhAPAA8BH/APIx/wD0Uf8A9nH/APeR/wD5sf8A+9H/AP//
        /wAAAAAAGwAvAC0AUAA/AHAAUgCQAGMAsAB2AM8AiADwAJkR/wCmMf8AtFH/AMJx/wDPkf8A3LH/AOvR
        /wD///8AAAAAAAgALwAOAFAAFQBwABsAkAAhALAAJgDPACwA8AA+Ef8AWDH/AHFR/wCMcf8AppH/AL+x
        /wDa0f8A////AA4ODg4ODg4ODg4ODg4ODg4OLy8vLy8vLy8vLy8vLy8ODi8jLxcNFi8UIyMjIy8vDg4v
        IyMAHgcfCS8vIyMvLw4OLyMjIhgBIQATHCMjLy8ODi8jIw8KIC8EGQUgLy8vDg4vIyMHGw0gByAIHiMv
        Lw4OLyMjGgwRIgsNEiMjLy8ODi8jIyMvFhUfIyMjIy8vDg4vIyMjIwMYAyIjIyMvLw4OLyMjIyMJLw0d
        IyMjLy8ODi8jIyMjCC8QHSMjIy8vDg4vIyMjIwkvCB4jIyMvLw4OLy8vLyMCCxAvIyMjLy8ODi8vLy8v
        ISEiIyMjIy8vDg4ODg4ODg4ODg4ODg4ODg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>